<?xml version="1.0" encoding="UTF-8"?>
<svg width="200" height="200" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="sealGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#6366f1"/>
      <stop offset="50%" style="stop-color:#14b8a6"/>
      <stop offset="100%" style="stop-color:#f43f5e"/>
    </linearGradient>
    <filter id="glow">
      <feGaussianBlur in="SourceGraphic" stdDeviation="2"/>
      <feColorMatrix type="matrix" values="
        1 0 0 0 0
        0 1 0 0 0
        0 0 1 0 0
        0 0 0 15 -7
      "/>
    </filter>
  </defs>
  
  <!-- Outer rings -->
  <circle cx="100" cy="100" r="90" fill="none" stroke="url(#sealGradient)" stroke-width="3" opacity="0.3"/>
  <circle cx="100" cy="100" r="85" fill="none" stroke="url(#sealGradient)" stroke-width="1" stroke-dasharray="1,3"/>
  
  <!-- Inner decorative elements -->
  <g transform="translate(100,100)">
    <!-- Radial lines -->
    {Array.from({length: 12}).map((_, i) => `
      <line
        x1="0"
        y1="-60"
        x2="0"
        y2="-75"
        stroke="url(#sealGradient)"
        stroke-width="1"
        transform="rotate(${i * 30})"
        opacity="0.5"
      />
    `).join('')}
    
    <!-- Decorative shapes -->
    <path
      d="M0,-50 L10,-30 L30,-40 L20,-20 L40,-10 L20,0 L40,10 L20,20 L30,40 L10,30 L0,50 L-10,30 L-30,40 L-20,20 L-40,10 L-20,0 L-40,-10 L-20,-20 L-30,-40 L-10,-30 Z"
      fill="none"
      stroke="url(#sealGradient)"
      stroke-width="1"
      opacity="0.3"
    />
  </g>
  
  <!-- Center icon -->
  <circle cx="100" cy="100" r="40" fill="url(#sealGradient)" opacity="0.1"/>
  <path
    d="M80,100 L95,115 L120,90"
    stroke="url(#sealGradient)"
    stroke-width="4"
    stroke-linecap="round"
    stroke-linejoin="round"
    filter="url(#glow)"
  />
  
  <!-- Text ring -->
  <g transform="translate(100,100)">
    {Array.from({length: 36}).map((_, i) => {
      const angle = (i * 10) * Math.PI / 180;
      const radius = 65;
      const x = Math.cos(angle) * radius;
      const y = Math.sin(angle) * radius;
      return `
        <circle
          cx="${x}"
          cy="${y}"
          r="1"
          fill="url(#sealGradient)"
          opacity="${0.1 + (i % 3) * 0.1}"
        />
      `;
    }).join('')}
  </g>
</svg> 